---
- name: install python3 on centos
  become: true
  hosts: all
  gather_facts: false
  tasks:
  - name: install python3
    raw: yum install -y python3

- name: Install ligthouse and nginx
  hosts: lighthouse
  tasks:
    - name: Install nginx
      become: true
      ansible.builtin.yum:
        name: nginx
        state: latest
    - name: Enable service nginx
      become: true
      ansible.builtin.service:
        name: nginx
        state: restarted
        enabled: yes
    - name: Install git
      become: true
      ansible.builtin.yum:
        name: git
        state: latest
    - name: Clone lighthouse from github
      ansible.builtin.git:
        repo: https://github.com/VKCOM/lighthouse.git
        dest: /tmp/lighthouse
        single_branch: yes
        version: master
    - name: Copy lighthouse to /usr/share/nginx/html/
      become: true
      ansible.builtin.copy:
        src: /tmp/lighthouse/
        dest: /usr/share/nginx/html
        remote_src: yes

- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
        enabled: yes
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"

    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: yes
      notify: Start clickhouse service

    - name: change config in /etc/clickhouse-server/config.xml
      become: true
      ansible.builtin.template:
        src: config.xml.j2
        dest: /etc/clickhouse-server/config.xml
        owner: clickhouse
        group: clickhouse
        mode: '0400'

    - name: force execution handlers (Start clickhouse service)
      ansible.builtin.meta: flush_handlers

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

    - name: Create table
      ansible.builtin.command: "clickhouse-client -q 'CREATE TABLE logs.demo (
                                message String,
                                source_type String,
                                timestamp String
                              )
                              ENGINE = MergeTree()
                              ORDER BY tuple()'"
      register: create_tbl
      failed_when: create_tbl.rc != 0 and create_tbl.rc !=57
      changed_when: create_tbl.rc == 0

- name: Install vector
  hosts: vector
  tasks:
    - name: Get vector distrib
      ansible.builtin.get_url:
        url: https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-1.x86_64.rpm
        dest: ./vector-{{ vector_version }}-1.x86_64.rpm
    - name: Install vector packages
      become: true
      ansible.builtin.yum:
        name: vector-{{ vector_version }}-1.x86_64.rpm
        disable_gpg_check: yes

    - name: Find clickhouse public ip
      uri:
        url: http://ifconfig.me/ip
        return_content: yes
      delegate_to: clickhouse-01
      register: clickhouse_ip

    - name: change config in /etc/vector/vector.toml
      become: true
      ansible.builtin.template:
        src: vector.toml.j2
        dest: /etc/vector/vector.toml
        owner: root
        group: root

    - name: Enable service vector
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
        enabled: yes